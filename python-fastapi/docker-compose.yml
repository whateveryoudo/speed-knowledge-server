services:
  # mysql:
  #   image: mysql:8.0
  #   container_name: speed-editor-db  # 用相同的名字
  #   restart: unless-stopped
  #   environment:
  #     MYSQL_DATABASE: speed-knowledge
  #     MYSQL_ROOT_PASSWORD: onemoretime123.
  #   ports:
  #     - "3306:3306"
  #   volumes:
  #     - mysql-data:/var/lib/mysql  # 指向原来的 volume
  #   command: --default-authentication-plugin=mysql_native_password
  #   healthcheck:
  #     test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-ponemoretime123."]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5
  # # 添加Redis服务
  redis: 
    image: redis:7-alpine
    container_name: fastapi-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fastapi-app
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      APP_NAME: "FastAPI Server"
      ENVIRONMENT: production
      DEBUG: "False"
      PORT: 8000
      DATABASE_URL: mysql+pymysql://root:onemoretime123.@mysql:3306/speed-knowledge
      SECRET_KEY: fa44273b1571628e36b527acabe1c06d796fad30cbb4ac40c93fdb10a30bb90f
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 10080
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_DB: 0
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8000/health')"]
      interval: 30s
      timeout: 3s
      retries: 3

volumes:
  redis-data:

