version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: gin-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: gin_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5434:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: gin-app
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      APP_NAME: "Gin API Server"
      ENVIRONMENT: production
      PORT: 8080
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: gin_db
      DB_SSLMODE: disable
      JWT_SECRET: your-secret-key-change-this-in-production
      JWT_EXPIRES_IN: 168h
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 3s
      retries: 3

volumes:
  postgres_data:

